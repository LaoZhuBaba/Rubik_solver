#!/usr/bin/python

X_LEFT, X_RIGHT, Y_UP, Y_DOWN, Z_CLOCKWISE, Z_ANTICLOCKWISE = range( 6 )

CLOCKWISE = 1
ANTICLOCKWISE = 0

direction_names = ( "X_LEFT", "X_RIGHT", "Y_UP", "Y_DOWN", "Z_CLOCKWISE", "Z_ANTI_CLOCKWISE" )

# When the whole cube is rotated through three possible axes there can be 24 possible orientations
# This table gives an absolute location for each of the 54 squares in the 24 possible orientations.
# E.g., orientation 0 has Red at the top and Yellow in front.  This is (arbitrarily) regarded as the
# "home" position, so in this position the relative positions match the physical positions.  However,
# in orientation 1 (Red on top and Green in front) the cube has been rotated 90 degrees.  This leaves
# the same 9 squares on top but their order has been changed due to the rotation.  
# 
orientations = [
# 0: R,Y
[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],
# 1: R,G
[2,3,4,5,6,7,0,1,8,36,37,38,39,40,41,42,43,44,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,51,52,45,46,47,48,49,50,53],
# 2: R,W
[4,5,6,7,0,1,2,3,8,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,49,50,51,52,45,46,47,48,53],
# 3: R,B
[6,7,0,1,2,3,4,5,8,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,9,10,11,12,13,14,15,16,17,47,48,49,50,51,52,45,46,53],
# 4: B,O
[27,28,29,30,31,32,33,34,35,20,21,22,23,24,25,18,19,26,45,46,47,48,49,50,51,52,53,42,43,36,37,38,39,40,41,44,2,3,4,5,6,7,0,1,8,15,16,9,10,11,12,13,14,17],
# 5: B,Y
[29,30,31,32,33,34,27,28,35,2,3,4,5,6,7,0,1,8,20,21,22,23,24,25,18,19,26,45,46,47,48,49,50,51,52,53,42,43,36,37,38,39,40,41,44,13,14,15,16,9,10,11,12,17],
# 6: B,R
[31,32,33,34,27,28,29,30,35,42,43,36,37,38,39,40,41,44,2,3,4,5,6,7,0,1,8,20,21,22,23,24,25,18,19,26,45,46,47,48,49,50,51,52,53,11,12,13,14,15,16,9,10,17],
# 7: B,W
[33,34,27,28,29,30,31,32,35,45,46,47,48,49,50,51,52,53,42,43,36,37,38,39,40,41,44,2,3,4,5,6,7,0,1,8,20,21,22,23,24,25,18,19,26,9,10,11,12,13,14,15,16,17],
# 8: W,G
[42,43,36,37,38,39,40,41,44,47,48,49,50,51,52,45,46,53,15,16,9,10,11,12,13,14,17,0,1,2,3,4,5,6,7,8,29,30,31,32,33,34,27,28,35,18,19,20,21,22,23,24,25,26],
# 9: W,O
[36,37,38,39,40,41,42,43,44,29,30,31,32,33,34,27,28,35,47,48,49,50,51,52,45,46,53,15,16,9,10,11,12,13,14,17,0,1,2,3,4,5,6,7,8,24,25,18,19,20,21,22,23,26],
#10: W,B
[38,39,40,41,42,43,36,37,44,0,1,2,3,4,5,6,7,8,29,30,31,32,33,34,27,28,35,47,48,49,50,51,52,45,46,53,15,16,9,10,11,12,13,14,17,22,23,24,25,18,19,20,21,26],
#11: W,R
[40,41,42,43,36,37,38,39,44,15,16,9,10,11,12,13,14,17,0,1,2,3,4,5,6,7,8,29,30,31,32,33,34,27,28,35,47,48,49,50,51,52,45,46,53,20,21,22,23,24,25,18,19,26],
#12: O,W
[51,52,45,46,47,48,49,50,53,13,14,15,16,9,10,11,12,17,40,41,42,43,36,37,38,39,44,31,32,33,34,27,28,29,30,35,22,23,24,25,18,19,20,21,26,2,3,4,5,6,7,0,1,8],
#13: O,G
[45,46,47,48,49,50,51,52,53,22,23,24,25,18,19,20,21,26,13,14,15,16,9,10,11,12,17,40,41,42,43,36,37,38,39,44,31,32,33,34,27,28,29,30,35,0,1,2,3,4,5,6,7,8],
#14: O,Y
[47,48,49,50,51,52,45,46,53,31,32,33,34,27,28,29,30,35,22,23,24,25,18,19,20,21,26,13,14,15,16,9,10,11,12,17,40,41,42,43,36,37,38,39,44,6,7,0,1,2,3,4,5,8],
#15: O,B
[49,50,51,52,45,46,47,48,53,40,41,42,43,36,37,38,39,44,31,32,33,34,27,28,29,30,35,22,23,24,25,18,19,20,21,26,13,14,15,16,9,10,11,12,17,4,5,6,7,0,1,2,3,8],
#16: G,O
[9,10,11,12,13,14,15,16,17,38,39,40,41,42,43,36,37,44,49,50,51,52,45,46,47,48,53,24,25,18,19,20,21,22,23,26,6,7,0,1,2,3,4,5,8,33,34,27,28,29,30,31,32,35],
#17: G,W
[11,12,13,14,15,16,9,10,17,6,7,0,1,2,3,4,5,8,38,39,40,41,42,43,36,37,44,49,50,51,52,45,46,47,48,53,24,25,18,19,20,21,22,23,26,31,32,33,34,27,28,29,30,35],
#18: G,R
[13,14,15,16,9,10,11,12,17,24,25,18,19,20,21,22,23,26,6,7,0,1,2,3,4,5,8,38,39,40,41,42,43,36,37,44,49,50,51,52,45,46,47,48,53,29,30,31,32,33,34,27,28,35],
#19: G,Y
[15,16,9,10,11,12,13,14,17,49,50,51,52,45,46,47,48,53,24,25,18,19,20,21,22,23,26,6,7,0,1,2,3,4,5,8,38,39,40,41,42,43,36,37,44,27,28,29,30,31,32,33,34,35],
#20: Y,B
[24,25,18,19,20,21,22,23,26,51,52,45,46,47,48,49,50,53,33,34,27,28,29,30,31,32,35,4,5,6,7,0,1,2,3,8,11,12,13,14,15,16,9,10,17,36,37,38,39,40,41,42,43,44],
#21: Y,O
[18,19,20,21,22,23,24,25,26,11,12,13,14,15,16,9,10,17,51,52,45,46,47,48,49,50,53,33,34,27,28,29,30,31,32,35,4,5,6,7,0,1,2,3,8,42,43,36,37,38,39,40,41,44],
#22: Y,G
[20,21,22,23,24,25,18,19,26,4,5,6,7,0,1,2,3,8,11,12,13,14,15,16,9,10,17,51,52,45,46,47,48,49,50,53,33,34,27,28,29,30,31,32,35,40,41,42,43,36,37,38,39,44],
#23: Y,R
[22,23,24,25,18,19,20,21,26,33,34,27,28,29,30,31,32,35,4,5,6,7,0,1,2,3,8,11,12,13,14,15,16,9,10,17,51,52,45,46,47,48,49,50,53,38,39,40,41,42,43,36,37,44],
]

# pathways records paths from each one of the 24 possible
# orientations to the six orientations that are 90 degrees
# distant on either the x, y, or z axis.
# index 0 is for x - 90 degrees (left)
# index 1 is for x + 90 degrees (right)
# index 2 is for y + 90 degrees (up)
# index 3 is for y - 90 degrees (down)
# index 4 is for z + 90 degrees (clockwise)
# index 5 is for z - 90 degrees (anticlockwise)
# E.g., from orientation 1 (Red on top, Green in front) if we rotate 90 degrees
# clockwise we reach orientation 8 (White on top, Green in front).
pathways = [
# 0: R,Y
    [3,1,21,11,19,5],
# 1: R,G
    [0,2,16,6,8,22],
# 2: R,W
    [1,3,9,23,7,17],
# 3: R,B
    [2,0,4,18,20,10],
# 4: B,O
    [7,5,13,3,21,9],
# 5: B,Y
    [4,6,22,10,0,14],
# 6: B,R
    [5,7,1,15,11,23],
# 7: B,W
    [6,4,8,20,12,2],
# 8: W,G
    [11,9,19,7,13,1],
# 9: W,0
    [8,10,14,2,4,16],
#10: W,B
    [9,11,5,17,3,15],
#11: W,R
    [10,8,0,12,18,6],
#12: O,W
    [15,13,11,21,17,7],
#13: O,G
    [12,14,18,4,22,8],
#14: O,Y
    [13,15,23,9,5,19],
#15: O,B
    [14,12,6,16,10,20],
#16: G,0
    [19,17,15,1,9,21],
#17: G,W
    [16,18,10,22,2,12],
#18: G,R
    [17,19,3,13,23,11],
#19: G,Y
    [18,16,20,8,14,0],
#20: Y,B
    [23,21,7,19,15,3],
#21: Y,O
    [20,22,12,0,16,4],
#22: Y,G
    [21,23,17,5,1,13],
#23: Y,R
    [22,20,2,14,6,18]
]

# This array provides the display coordinates of each square
# as displayed on the screen.
ABSOLUTE_CUBE_2D_XY = [
    # RED CENTRED BLOCK
    (15, 0),(20, 0),(25, 0),
    (25, 3),(25, 6),(20, 6),
    (15, 6),(15, 3),(20, 3),

    # GREEN CENTRED BLOCK
    ( 0, 9),( 5, 9),(10, 9),
    (10,12),(10,15),( 5,15),
    ( 0,15),( 0,12),( 5,12),

    # YELLOW CENTRED BLOCK
    (15, 9),(20, 9),(25, 9),
    (25,12),(25,15),(20,15),
    (15,15),(15,12),(20,12),

    # BLUE CENTRED BLOCK
    (30, 9),(35, 9),(40, 9),
    (40,12),(40,15),(35,15),
    (30,15),(30,12),(35,12),

    # WHITE CENTRED BLOCK
    (45, 9),(50, 9),(55, 9),
    (55,12),(55,15),(50,15),
    (45,15),(45,12),(50,12),

    # MAGENTA CENTRED BLOCK
    (30,18),(35,18),(40,18),
    (40,21),(40,24),(35,24),
    (30,24),(30,21),(35,21)
    ]


# The following 12 constants define values for the 12 possible physical moves that
# will be used.  These "physical" moves are made against the cube in a fixed
# arbitrarily chosen position with a RED center on top, GREEN on the left, YELLOW in
# front, etc.  The centre squares NEVER MOVE.
move_list = ( RED_CLOCK, GREEN_CLOCK, YELLOW_CLOCK, BLUE_CLOCK, WHITE_CLOCK, MAGENTA_CLOCK,
              RED_ANTI, GREEN_ANTI, YELLOW_ANTI, BLUE_ANTI, WHITE_ANTI , MAGENTA_ANTI ) = range(12)

MOVES = [ None ] * len( move_list )

# The follow pairs of numbers give the before and after positions of squares that change for a particular move.
# For example, the first pair [0,2] tell us that RED_CLOCK moves square in position 0 to position 2.
MOVES[ RED_CLOCK ] =  [[0,2],[1,3],[2,4],[3,5],[4,6],[5,7],[6,0],[7,1],[38,29],[37,28],[36,27],[29,20],[28,19],[27,18],[20,11],[19,10],[18,9],[11,38],[10,37],[9,36]]
MOVES[ GREEN_CLOCK ] =  [[9,11],[10,12],[11,13],[12,14],[13,15],[14,16],[15,9],[16,10],[0,18],[7,25],[6,24],[18,51],[25,50],[24,49],[51,40],[50,39],[49,38],[40,0],[39,7],[38,6]]
MOVES[ YELLOW_CLOCK ] =  [[18,20],[19,21],[20,22],[21,23],[22,24],[23,25],[24,18],[25,19],[6,27],[5,34],[4,33],[27,45],[34,52],[33,51],[45,13],[52,12],[51,11],[13,6],[12,5],[11,4]]
MOVES[ BLUE_CLOCK ] =  [[27,29],[28,30],[29,31],[30,32],[31,33],[32,34],[33,27],[34,28],[4,36],[3,43],[2,42],[36,47],[43,46],[42,45],[47,22],[46,21],[45,20],[22,4],[21,3],[20,2]]
MOVES[ WHITE_CLOCK ] =  [[36,38],[37,39],[38,40],[39,41],[40,42],[41,43],[42,36],[43,37],[2,9],[1,16],[0,15],[9,49],[16,48],[15,47],[49,31],[48,30],[47,29],[31,2],[30,1],[29,0]]
MOVES[ MAGENTA_CLOCK ] =  [[45,47],[46,48],[47,49],[48,50],[49,51],[50,52],[51,45],[52,46],[33,42],[32,41],[31,40],[42,15],[41,14],[40,13],[15,24],[14,23],[13,22],[24,33],[23,32],[22,31]]
MOVES[ RED_ANTI ] =  [[2,0],[3,1],[4,2],[5,3],[6,4],[7,5],[0,6],[1,7],[29,38],[28,37],[27,36],[20,29],[19,28],[18,27],[11,20],[10,19],[9,18],[38,11],[37,10],[36,9]]
MOVES[ GREEN_ANTI ] =  [[11,9],[12,10],[13,11],[14,12],[15,13],[16,14],[9,15],[10,16],[18,0],[25,7],[24,6],[51,18],[50,25],[49,24],[40,51],[39,50],[38,49],[0,40],[7,39],[6,38]]
MOVES[ YELLOW_ANTI ] =  [[20,18],[21,19],[22,20],[23,21],[24,22],[25,23],[18,24],[19,25],[27,6],[34,5],[33,4],[45,27],[52,34],[51,33],[13,45],[12,52],[11,51],[6,13],[5,12],[4,11]]
MOVES[ BLUE_ANTI ] =  [[29,27],[30,28],[31,29],[32,30],[33,31],[34,32],[27,33],[28,34],[36,4],[43,3],[42,2],[47,36],[46,43],[45,42],[22,47],[21,46],[20,45],[4,22],[3,21],[2,20]]
MOVES[ WHITE_ANTI ] =  [[38,36],[39,37],[40,38],[41,39],[42,40],[43,41],[36,42],[37,43],[9,2],[16,1],[15,0],[49,9],[48,16],[47,15],[31,49],[30,48],[29,47],[2,31],[1,30],[0,29]]
MOVES[ MAGENTA_ANTI ] =  [[47,45],[48,46],[49,47],[50,48],[51,49],[52,50],[45,51],[46,52],[42,33],[41,32],[40,31],[15,42],[14,41],[13,40],[24,15],[23,14],[22,13],[33,24],[32,23],[31,22]]

